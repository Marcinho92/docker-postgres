steps:
  # Pull previous images for caching
  - name: 'gcr.io/cloud-builders/docker'
    id: 'pull-backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker pull gcr.io/$PROJECT_ID/language-learning-backend:latest || exit 0
    waitFor: ['-']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'pull-frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker pull gcr.io/$PROJECT_ID/language-learning-frontend:latest || exit 0
    waitFor: ['-']

  # Build backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/language-learning-backend'
      - '-t'
      - 'gcr.io/$PROJECT_ID/language-learning-backend:latest'
      - '-f'
      - 'Dockerfile.prod'
      - '--build-arg'
      - 'SPRING_PROFILES_ACTIVE=prod'
      - '--build-arg'
      - 'DATABASE_NAME=language_learning'
      - '--build-arg'
      - 'CLOUD_SQL_CONNECTION_NAME=${_CLOUD_SQL_CONNECTION_NAME}'
      - '--cache-from'
      - 'gcr.io/$PROJECT_ID/language-learning-backend:latest'
      - '.'
    waitFor: ['pull-backend']

  # Build frontend image in parallel
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/language-learning-frontend'
      - '-t'
      - 'gcr.io/$PROJECT_ID/language-learning-frontend:latest'
      - '-f'
      - 'frontend/Dockerfile.prod'
      - '--cache-from'
      - 'gcr.io/$PROJECT_ID/language-learning-frontend:latest'
      - './frontend'
    waitFor: ['pull-frontend']

  # Push images in parallel
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args: ['push', 'gcr.io/$PROJECT_ID/language-learning-backend']
    waitFor: ['build-backend']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args: ['push', 'gcr.io/$PROJECT_ID/language-learning-frontend']
    waitFor: ['build-frontend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-backend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'language-learning-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/language-learning-backend'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '10'
      - '--port'
      - '8080'
      - '--service-account'
      - 'language-learning-app@marcinho-language-learning.iam.gserviceaccount.com'
      - '--set-secrets'
      - 'DATABASE_USER=database_user:latest,DATABASE_PASSWORD=database_password:latest,JWT_SECRET=jwt_secret:latest,FRONTEND_URL=frontend_url:latest'
      - '--set-env-vars'
      - 'SPRING_PROFILES_ACTIVE=prod,DATABASE_NAME=language_learning,CLOUD_SQL_CONNECTION_NAME=${_CLOUD_SQL_CONNECTION_NAME}'
      - '--add-cloudsql-instances'
      - '${_CLOUD_SQL_CONNECTION_NAME}'
      - '--use-http2'
      - '--timeout'
      - '600s'
      - '--cpu-boost'
      - '--no-cpu-throttling'
      - '--execution-environment'
      - 'gen2'
      - '--ingress'
      - 'all'
      - '--startup-probe=httpGet.path=/actuator/health/liveness,httpGet.port=8080,initialDelaySeconds=30,periodSeconds=10,failureThreshold=3,timeoutSeconds=5'
    waitFor: ['push-backend']

  # Deploy frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-frontend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'language-learning-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/language-learning-frontend'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '2'
      - '--timeout'
      - '60s'
      - '--execution-environment'
      - 'gen2'
    waitFor: ['push-frontend']

options:
  machineType: 'E2_HIGHCPU_8'

images:
  - 'gcr.io/$PROJECT_ID/language-learning-backend'
  - 'gcr.io/$PROJECT_ID/language-learning-frontend'

substitutions:
  _REGION: 'europe-central2'
  _CLOUD_SQL_CONNECTION_NAME: 'marcinho-language-learning:europe-central2:language-learning-db'